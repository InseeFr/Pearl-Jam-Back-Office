name: Snapshot on feature/hotfix branches

on:
  workflow_dispatch:

jobs:
  verify-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Verify branch
        run: |
          if [[ ! "${{ github.ref }}" =~ ^refs/heads/(feature|hotfix|feat|fix)-.* ]]; then
            echo "This workflow can only be run on 'feature-*' or 'hotfix-*' branches."
            exit 1
          fi

  check-version:
    needs: verify-branch
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: version
        shell: bash
        run: echo "version=$(echo ${GITHUB_REF#refs/heads/})-snapshot" >>$GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.version }}

      - uses: mukunku/tag-exists-action@v1.6.0
        name: Check tag existence
        id: check-tag-exists
        with:
          tag: ${{ steps.version.outputs.version }}

      - name: Create or update tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ "${{ steps.check-tag-exists.outputs.exists }}" == "true" ]]; then
            echo "Tag ${{ steps.version.outputs.version }} exists, deleting it"
            git push origin :refs/tags/${{ steps.version.outputs.version }}
          fi
          echo "Creating new tag ${{ steps.version.outputs.version }}..."
          git tag ${{ steps.version.outputs.version }} ${{ github.sha }}
          git push origin refs/tags/${{ steps.version.outputs.version }}:refs/tags/${{ steps.version.outputs.version }}

  build-sources:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build API
        run: mvn package --no-transfer-progress

      - name: Upload API jar
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  publish-docker:
    needs: [ check-version, build-sources ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download uploaded jar
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/

      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/pearl-jam-back-office
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          default_branch: ${{ github.ref }}
          tags: ${{ needs.check-version.outputs.release-version }}