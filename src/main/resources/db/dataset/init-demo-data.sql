--changeset davdarras:init-demo-data context:demo

TRUNCATE TABLE
    public.other_mode_questionnaire_state,
    public.communication_request_status,
    public.communication_request,
    public.communication_template,
    public.communication_metadata,
    public.contact_attempt,
    public.oumessage_recipient,
    public.referent,
    public.message,
    public.campaign_message_recipient,
    public.message_status,
    public.interviewer,
    public.sample_identifier,
    public.user,
    public.campaign,
    public.preference,
    public.visibility,
    public.survey_unit,
    public.identification,
    public.person,
    public.phone_number,
    public.state,
    public.contact_outcome,
    public.comment,
    public.closing_cause,
    public.organization_unit,
    public.address;

INSERT INTO public.address (id, dtype, l1, l2, l3, l4, l5, l6, l7, elevator, building, floor, door, staircase, city_priority_district) VALUES
    (1,  'InseeAddress', 'Ted Farmer',            '', '', '1 rue de la gare',              '', '29270 Carhaix',        'France', true,  'Bat. C', 'Etg 4', 'Porte 48',   'Escalier B', true),
    (2,  'InseeAddress', 'Cecilia Ortega',        '', '', '2 place de la mairie',          '', '90000 Belfort',       'France', false, null,     null,    null,         null,       false),
    (3,  'InseeAddress', 'Claude Watkins',        '', '', '3 avenue de la République',     '', '32230 Marciac',       'France', false, null,     null,    null,         null,       false),
    (4,  'InseeAddress', 'Veronica Baker',        '', '', '4 chemin du ruisseau',          '', '44190 Clisson',       'France', false, null,     null,    null,         null,       false),
    (5,  'InseeAddress', 'Harriette Raymond',     '', '', '5 rue de l''école',             '', '59620 Aulnoye-Aimeries','France', false, null,     null,    null,         null,       false),
    (6,  'InseeAddress', 'Aimée Lamothe',         '', '', '6 impasse du lac',              '', '38200 Vienne',        'France', false, null,     null,    null,         null,       false),
    (7,  'InseeAddress', 'Perrin Blanchard',      '', '', '7 avenue de la Liberté',        '', '62000 Arras',         'France', false, null,     null,    null,         null,       false),
    (8,  'InseeAddress', 'Artus Arnoux',          '', '', '8 route du moulin',             '', '35000 Rennes',        'France', false, null,     null,    null,         null,       false),
    (9,  'InseeAddress', 'Isabelle Moreau',       '', '', '5 route du sapin',              '', '35000 Rennes',        'France', false, null,     null,    null,         null,       false),
    (10, 'InseeAddress', 'Julien Dupont',         '', '', '7 rue des Infusions',           '', '75001 Paris',         'France', false, null,     null,    null,         null,       false),
    (11, 'InseeAddress', 'Arthur Couyer',         '', '', '15 avenue des Fromages',        '', '69002 Lyon',          'France', false, null,     null,    null,         null,       false),
    (12, 'InseeAddress', 'Marc Lefevre',          '', '', '8 impasse des Aromates',        '', '13003 Marseille',     'France', false, null,     null,    null,         null,       false),
    (13, 'InseeAddress', 'Kaa Melott',            '', '', '12 chemin du Dentifrice',       '', '33000 Bordeaux',      'France', false, null,     null,    null,         null,       false),
    (14, 'InseeAddress', 'Père Seval',            '', '', '3 place des Pâtes',             '', '59000 Lille',         'France', false, null,     null,    null,         null,       false),
    (15, 'InseeAddress', 'Camille Renaud',        '', '', '22 rue de la Faim',             '', '67000 Strasbourg',    'France', false, null,     null,    null,         null,       false),
    (16, 'InseeAddress', 'Pauline Durand',        '', '', '9 allée des Gourmands',         '', '44000 Nantes',        'France', false, null,     null,    null,         null,       false),
    (17, 'InseeAddress', 'Antoine Morel',         '', '', '18 boulevard des Légumes',      '', '31000 Toulouse',      'France', false, null,     null,    null,         null,       false),
    (18, 'InseeAddress', 'Marine Lambert',        '', '', '5 rue des Croissants',          '', '06000 Nice',          'France', false, null,     null,    null,         null,       false),
    (19, 'InseeAddress', 'Alexandre Faure',       '', '', '10 rue des Fleurs',             '', '75002 Paris',         'France', false, null,     null,    null,         null,       false),
    (20, 'InseeAddress', 'Eoldie Renault',        '', '', '20 avenue Victor Hugo',         '', '75008 Paris',         'France', false, null,     null,    null,         null,       false),
    (21, 'InseeAddress', 'Maxime Petit',          '', '', '30 boulevard Saint-Germain',    '', '75005 Paris',         'France', false, null,     null,    null,         null,       false),
    (22, 'InseeAddress', 'Amélie Gautier',        '', '', '40 quai de Seine',              '', '75007 Paris',         'France', false, null,     null,    null,         null,       false),
    (23, 'InseeAddress', 'Damien Roux',           '', '', '50 rue de Rivoli',              '', '75004 Paris',         'France', false, null,     null,    null,         null,       false),
    (24, 'InseeAddress', 'Claire Dubois',         '', '', '60 rue de la Paix',             '', '75002 Paris',         'France', false, null,     null,    null,         null,       false),
    (25, 'InseeAddress', 'Hugo Simon',            '', '', '70 rue de Belleville',          '', '75020 Paris',         'France', false, null,     null,    null,         null,       false),
    (26, 'InseeAddress', 'Chloé Lemoine',         '', '', '80 rue de la République',       '', '69001 Lyon',          'France', false, null,     null,    null,         null,       false),
    (27, 'InseeAddress', 'Romain Bertrand',       '', '', '90 avenue Jean Jaurès',         '', '69003 Lyon',          'France', false, null,     null,    null,         null,       false),
    (28, 'InseeAddress', 'Alice Renault',         '', '', '100 rue Victor Hugo',           '', '69002 Lyon',          'France', false, null,     null,    null,         null,       false),
    (29, 'InseeAddress', 'Guillaume Faure',       '', '', '110 boulevard des Capucines',   '', '33000 Bordeaux',      'France', false, null,     null,    null,         null,       false),
    (30, 'InseeAddress', 'Laurent Neville',       '', '', '120 rue Sainte-Catherine',      '', '33000 Bordeaux',      'France', false, null,     null,    null,         null,       false),
    (31, 'InseeAddress', 'Harry Cover',           '', '', '130 chemin de la Lune',         '', '13004 Marseille',     'France', false, null,     null,    null,         null,       false),
    (32, 'InseeAddress', 'Ella Gance',            '', '', '140 rue du Soleil',             '', '13001 Marseille',     'France', false, null,     null,    null,         null,       false),
    (33, 'InseeAddress', 'Jean Neige',            '', '', '150 avenue des Étoiles',        '', '06000 Nice',          'France', false, null,     null,    null,         null,       false),
    (34, 'InseeAddress', 'Phil Harmonie',         '', '', '160 boulevard de la Mer',       '', '06200 Nice',          'France', false, null,     null,    null,         null,       false),
    (35, 'InseeAddress', 'Alain Thé',             '', '', '170 rue de l''Industrie',       '', '67000 Strasbourg',    'France', false, null,     null,    null,         null,       false),
    (36, 'InseeAddress', 'Brie Savarin',          '', '', '180 rue des Arts',              '', '44000 Nantes',        'France', false, null,     null,    null,         null,       false),
    (37, 'InseeAddress', 'Cécile Houte',          '', '', '190 avenue du Général de Gaulle','', '34000 Montpellier',   'France', false, null,     null,    null,         null,       false),
    (38, 'InseeAddress', 'Dan Tifrice',           '', '', '200 boulevard de la Liberté',   '', '34000 Montpellier',   'France', false, null,     null,    null,         null,       false),
    (39, 'InseeAddress', 'Emile Pates',           '', '', '210 rue des Entrepreneurs',     '', '38000 Grenoble',      'France', false, null,     null,    null,         null,       false),
    (40, 'InseeAddress', 'Marine Lefevre',        '', '', '41 rue de la République',       '', '75001 Paris',         'France', false, null,     null,    null,         null,       false),
    (41, 'InseeAddress', 'Thierry Bernard',       '', '', '42 avenue de la Liberté',       '', '69000 Lyon',          'France', false, null,     null,    null,         null,       false),
    (42, 'InseeAddress', 'Sylvie Martin',         '', '', '43 boulevard Saint-Germain',    '', '13000 Marseille',     'France', false, null,     null,    null,         null,       false),
    (43, 'InseeAddress', 'Laurence Girard',       '', '', '44 chemin du Moulin',           '', '34000 Montpellier',    'France', false, null,     null,    null,         null,       false),
    (44, 'InseeAddress', 'Dominique Moreau',      '', '', '45 impasse du Lac',             '', '31000 Toulouse',      'France', false, null,     null,    null,         null,       false),
    (45, 'InseeAddress', 'Juliette Roussel',      '', '', '46 route du Soleil',            '', '44000 Nantes',        'France', false, null,     null,    null,         null,       false),
    (46, 'InseeAddress', 'Pascal Dubois',         '', '', '47 place de la Mairie',         '', '67000 Strasbourg',     'France', false, null,     null,    null,         null,       false),
    (47, 'InseeAddress', 'Amandine Perrin',       '', '', '48 allée des Fleurs',           '', '35000 Rennes',         'France', false, null,     null,    null,         null,       false),
    (48, 'InseeAddress', 'Nicolas Lambert',       '', '', '49 rue des Sapins',             '', '29000 Quimper',        'France', false, null,     null,    null,         null,       false),
    (49, 'InseeAddress', 'Bruno Simon',           '', '', '50 avenue de la Gare',          '', '21000 Dijon',          'France', false, null,     null,    null,         null,       false),
    (50, 'InseeAddress', 'Véronique Petit',       '', '', '51 rue des Ecoles',             '', '14000 Caen',           'France', false, null,     null,    null,         null,       false),
    (51, 'InseeAddress', 'Philippe Garnier',      '', '', '52 rue de l''Industrie',        '', '76000 Rouen',          'France', false, null,     null,    null,         null,       false),
    (52, 'InseeAddress', 'Catherine Renault',     '', '', '53 boulevard de la Mer',        '', '80000 Amiens',         'France', false, null,     null,    null,         null,       false),
    (53, 'InseeAddress', 'Jacques Faure',         '', '', '55 boulevard de la Mer',        '', '80000 Amiens',         'France', false, null,     null,    null,         null,       false);

INSERT INTO public.organization_unit (id, label, type, organization_unit_parent_id) VALUES ('OU-NATIONAL', 'National organizational unit', 'NATIONAL', null);
INSERT INTO public.organization_unit (id, label, type, organization_unit_parent_id) VALUES ('OU-NORTH', 'North region organizational unit', 'LOCAL', 'OU-NATIONAL');
INSERT INTO public.organization_unit (id, label, type, organization_unit_parent_id) VALUES ('OU-SOUTH', 'South region organizational unit', 'LOCAL', 'OU-NATIONAL');
INSERT INTO public.organization_unit (id, label, type, organization_unit_parent_id) VALUES ('OU-WEST', 'West region organizational unit', 'LOCAL', 'OU-NATIONAL');

INSERT INTO public.interviewer (id, email, first_name, last_name, phone_number) VALUES
    ('INTERV1', 'interviewer1@insee.fr', 'Isabelle', 'Interviewer 1', '+3391231231231'),
    ('INTERV2', 'interviewer2@insee.fr', 'Ingrid',   'Interviewer 2', '+3391231231232'),
    ('INTERV3', 'interviewer3@insee.fr', 'Isaac',    'Interviewer 3', '+3391231231233'),
    ('INTERV4', 'interviewer4@insee.fr', 'Isidore',  'Interviewer 4', '+3391231231234'),
    ('INTERV5', 'interviewer5@insee.fr', 'Irma',     'Interviewer 5', '+3391231231235');

INSERT INTO public.sample_identifier (id, dtype, autre, bs, ec, le, nograp, noi, nole, nolog, numfa, rges, ssech) VALUES
    (1,  'InseeSampleIdentifier', '1',  1, '1',  1,  '11',  1,  1,  1,  1,  1, 1),
    (2,  'InseeSampleIdentifier', '2',  2, '1',  2,  '12',  2,  2,  2,  2,  2, 1),
    (3,  'InseeSampleIdentifier', '3',  3, '1',  3,  '13',  3,  3,  3,  3,  3, 2),
    (4,  'InseeSampleIdentifier', '4',  4, '1',  4,  '14',  4,  4,  4,  4,  4, 3),
    (5,  'InseeSampleIdentifier', '5',  5, '2',  5,  '15',  5,  5,  5,  5,  5, 1),
    (6,  'InseeSampleIdentifier', '6',  6, '2',  6,  '16',  6,  6,  6,  6,  6, 1),
    (7,  'InseeSampleIdentifier', '7',  7, '2',  7,  '17',  7,  7,  7,  7,  7, 2),
    (8,  'InseeSampleIdentifier', '8',  8, '2',  8,  '18',  8,  8,  8,  8,  8, 1),
    (9,  'InseeSampleIdentifier', '9',  9, '2',  9,  '19',  9,  9,  9,  9,  9, 1),
    (10, 'InseeSampleIdentifier', '10', 10, '1', 10,  '20', 10, 10, 10, 10, 10, 1),
    (11, 'InseeSampleIdentifier', '11', 11, '1', 11,  '21', 11, 11, 11, 11, 11, 1),
    (12, 'InseeSampleIdentifier', '12', 12, '1', 12,  '22', 12, 12, 12, 12, 12, 2),
    (13, 'InseeSampleIdentifier', '13', 13, '1', 13,  '23', 13, 13, 13, 13, 13, 3),
    (14, 'InseeSampleIdentifier', '14', 14, '2', 14,  '24', 14, 14, 14, 14, 14, 1),
    (15, 'InseeSampleIdentifier', '15', 15, '2', 15,  '25', 15, 15, 15, 15, 15, 1),
    (16, 'InseeSampleIdentifier', '16', 16, '2', 16,  '26', 16, 16, 16, 16, 16, 2),
    (17, 'InseeSampleIdentifier', '17', 17, '2', 17,  '27', 17, 17, 17, 17, 17, 1),
    (18, 'InseeSampleIdentifier', '18', 18, '2', 18,  '28', 18, 18, 18, 18, 18, 1),
    (19, 'InseeSampleIdentifier', '19', 19, '1', 19,  '29', 19, 19, 19, 19, 19, 1),
    (20, 'InseeSampleIdentifier', '20', 20, '1', 20,  '30', 20, 20, 20, 20, 20, 1),
    (21, 'InseeSampleIdentifier', '21', 21, '1', 21,  '31', 21, 21, 21, 21, 21, 2),
    (22, 'InseeSampleIdentifier', '22', 22, '1', 22,  '32', 22, 22, 22, 22, 22, 3),
    (23, 'InseeSampleIdentifier', '23', 23, '1', 23,  '33', 23, 23, 23, 23, 23, 1),
    (24, 'InseeSampleIdentifier', '24', 24, '1', 24,  '34', 24, 24, 24, 24, 24, 1),
    (25, 'InseeSampleIdentifier', '25', 25, '1', 25,  '35', 25, 25, 25, 25, 25, 2),
    (26, 'InseeSampleIdentifier', '26', 26, '1', 26,  '36', 26, 26, 26, 26, 26, 1),
    (27, 'InseeSampleIdentifier', '27', 27, '1', 27,  '37', 27, 27, 27, 27, 27, 1),
    (28, 'InseeSampleIdentifier', '28', 28, '1', 28,  '38', 28, 28, 28, 28, 28, 1),
    (29, 'InseeSampleIdentifier', '29', 29, '1', 29,  '39', 29, 29, 29, 29, 29, 1),
    (30, 'InseeSampleIdentifier', '30', 30, '1', 30,  '40', 30, 30, 30, 30, 30, 2),
    (31, 'InseeSampleIdentifier', '31', 31, '1', 31,  '41', 31, 31, 31, 31, 31, 3),
    (32, 'InseeSampleIdentifier', '32', 32, '1', 32,  '42', 32, 32, 32, 32, 32, 1),
    (33, 'InseeSampleIdentifier', '33', 33, '1', 33,  '43', 33, 33, 33, 33, 33, 1),
    (34, 'InseeSampleIdentifier', '34', 34, '1', 34,  '44', 34, 34, 34, 34, 34, 2),
    (35, 'InseeSampleIdentifier', '35', 35, '1', 35,  '45', 35, 35, 35, 35, 35, 1),
    (36, 'InseeSampleIdentifier', '36', 36, '1', 36,  '46', 36, 36, 36, 36, 36, 1),
    (37, 'InseeSampleIdentifier', '37', 37, '1', 37,  '47', 37, 37, 37, 37, 37, 1),
    (38, 'InseeSampleIdentifier', '38', 38, '1', 38,  '48', 38, 38, 38, 38, 38, 1),
    (39, 'InseeSampleIdentifier', '39', 39, '1', 39,  '49', 39, 39, 39, 39, 39, 1),
    (40, 'InseeSampleIdentifier', '40', 40, '1', 40,  '50', 40, 40, 40, 40, 40, 1),
    (41, 'InseeSampleIdentifier', '41', 41, '1', 41,  '51', 41, 41, 41, 41, 41, 1),
    (42, 'InseeSampleIdentifier', '42', 42, '1', 42,  '52', 42, 42, 42, 42, 42, 1),
    (43, 'InseeSampleIdentifier', '43', 43, '1', 43,  '53', 43, 43, 43, 43, 43, 1),
    (44, 'InseeSampleIdentifier', '44', 44, '1', 44,  '54', 44, 44, 44, 44, 44, 1),
    (45, 'InseeSampleIdentifier', '45', 45, '1', 45,  '55', 45, 45, 45, 45, 45, 1),
    (46, 'InseeSampleIdentifier', '46', 46, '1', 46,  '56', 46, 46, 46, 46, 46, 1),
    (47, 'InseeSampleIdentifier', '47', 47, '1', 47,  '57', 47, 47, 47, 47, 47, 1),
    (48, 'InseeSampleIdentifier', '48', 48, '1', 48,  '58', 48, 48, 48, 48, 48, 1),
    (49, 'InseeSampleIdentifier', '49', 49, '1', 49,  '59', 49, 49, 49, 49, 49, 1),
    (50, 'InseeSampleIdentifier', '50', 50, '1', 50,  '60', 50, 50, 50, 50, 50, 1),
    (51, 'InseeSampleIdentifier', '51', 51, '1', 51,  '61', 51, 51, 51, 51, 51, 1),
    (52, 'InseeSampleIdentifier', '52', 52, '1', 52,  '62', 52, 52, 52, 52, 52, 1),
    (53, 'InseeSampleIdentifier', '53', 53, '1', 53,  '63', 53, 53, 53, 53, 53, 1);

INSERT INTO public.USER (id, first_name, last_name, organization_unit_id) VALUES
    ('GESTIO1', 'Gertrude', 'Gestionnaire1', 'OU-NATIONAL'),
    ('GESTIO2', 'Gontrand', 'Gestionnaire2', 'OU-NORTH'),
    ('GESTIO3', 'Gerard', 'Gestionnaire3', 'OU-SOUTH'),
    ('GESTIO4', 'Gustave', 'Gestionnaire4', 'OU-WEST');

INSERT INTO public.campaign (id, label, email, identification_configuration, contact_attempt_configuration, contact_outcome_configuration, sensitivity) VALUES
    ('SIMPSONS2020X00', 'Survey on the Simpsons tv show 2020', 'first.email@test.com', 'IASCO', 'F2F', 'F2F', false),
    ('VQS2021X00', 'Everyday life and health survey 2021', 'second.email@test.com', 'IASCO', 'TEL', 'TEL', false),
    ('ZCLOSEDX00', 'Everyday life and health survey 2021', 'third.email@test.com', 'IASCO', 'F2F', 'F2F', false),
    ('XCLOSEDX00', 'Everyday life and health survey 2021', 'fourth.email@test.com', 'IASCO', 'TEL', 'TEL', false),
    ('AQV2022X00', 'Campagne qualité volaille en 2022', 'second.email@test.com', 'IASCO', 'F2F', 'F2F', false),
    ('AQV2023X00', 'Campagne qualité volaille en 2023', 'second.email@test.com', 'IASCO', 'F2F', 'F2F', true),
    ('AQV2024X00', 'Campagne qualité volaille en 2024', 'second.email@test.com', 'IASCO', 'F2F', 'F2F', false),
    ('INDTEL2025X00', 'INDTEL campaign', 'third.email@test.com', 'INDTEL', 'TEL', 'TEL', false),
    ('IASCO2025X00', 'IASCO campaign', 'third.email@test.com', 'IASCO', 'F2F', 'F2F', false),
    ('NOIDENT2025X00', 'NOIDENT campaign', 'third.email@test.com', 'NOIDENT', NULL, NULL, false),
    ('HOUSEF2F2025X00', 'HOUSEF2F campaign', 'third.email@test.com', 'HOUSEF2F', 'F2F', 'F2F', false),
    ('HOUSETEL2025X00', 'HOUSETEL campaign', 'third.email@test.com', 'HOUSETEL', 'TEL', 'TEL', false),
    ('HOUSETELWSR2025X00', 'HOUSETELWSR campaign', 'third.email@test.com', 'HOUSETELWSR', 'TEL', 'TEL', false),
    ('SRCVREINT2025X00', 'SRCVREINT campaign', 'third.email@test.com', 'SRCVREINT', NULL, NULL, false),
    ('INDTELNOR2025X00', 'INDTELNOR campaign', 'third.email@test.com', 'INDTELNOR', 'TEL', 'TEL', false),
    ('INDF2F2025X00', 'INDF2F campaign', 'third.email@test.com', 'INDF2F', 'F2F', 'F2F', false),
    ('INDF2FNOR2025X00', 'INDF2F campaign', 'third.email@test.com', 'INDF2FNOR', 'F2F', 'F2F', false);

INSERT INTO public.preference (id_user, id_campaign) VALUES
    ('GESTIO1', 'SIMPSONS2020X00'),
    ('GESTIO1', 'AQV2023X00'),
    ('GESTIO2', 'VQS2021X00'),
    ('GESTIO3', 'ZCLOSEDX00'),
    ('GESTIO4', 'XCLOSEDX00');


INSERT INTO visibility (
    organization_unit_id,
    campaign_id,
    collection_end_date,
    collection_start_date,
    end_date,
    identification_phase_start_date,
    interviewer_start_date,
    management_start_date,
    use_letter_communication,
    mail,
    tel
) VALUES
    ('OU-NORTH', 'SIMPSONS2020X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'north-simpsons@nooneknows.fr', '0321234567'),

    ('OU-NORTH', 'VQS2021X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'north-vqs@nooneknows.fr', ''),

    ('OU-SOUTH', 'VQS2021X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'south-vqs@nooneknows.fr', ''),

    ('OU-SOUTH', 'SIMPSONS2020X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'south-simpsons@nooneknows.fr', '0123456789'),

    ('OU-SOUTH', 'ZCLOSEDX00',
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '5 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '6 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '7 days') * 1000,
        true, 'south-zclosed@nooneknows.fr', ''),

    ('OU-WEST', 'ZCLOSEDX00',
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '5 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '6 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '7 days') * 1000,
        true, 'west-zclosed@nooneknows.fr', ''),

    ('OU-SOUTH', 'XCLOSEDX00',
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '5 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '6 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '7 days') * 1000,
        true, 'south-xclosed@nooneknows.fr', ''),
    
    ('OU-NORTH', 'AQV2022X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'aqv2022@nooneknows.fr', '0321234567'),
    
    ('OU-NORTH', 'AQV2023X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'aqv2023@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'AQV2024X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'aqv2024@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'INDF2F2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'indf2f@nooneknows.fr', '0321234567'),

    ('OU-NORTH', 'INDF2FNOR2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'indf2fnor@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'INDTELNOR2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'indtelnor@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'SRCVREINT2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'srcvreint@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'HOUSETELWSR2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'housetelwsr@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'HOUSETEL2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'housetel@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'HOUSEF2F2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'housef2fs@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'NOIDENT2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'noident@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'IASCO2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'iasco@nooneknows.fr', '0321234567'),
        
    ('OU-NORTH', 'INDTEL2025X00',
        EXTRACT(EPOCH FROM NOW() + INTERVAL '1 month') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '1 day') * 1000,
        EXTRACT(EPOCH FROM NOW() + INTERVAL '2 months') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '2 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000,
        EXTRACT(EPOCH FROM NOW() - INTERVAL '4 days') * 1000,
        true, 'indtel@nooneknows.fr', '0321234567');

INSERT INTO public.survey_unit (id, display_name, priority, address_id, campaign_id, interviewer_id, sample_identifier_id, organization_unit_id) VALUES
    ('11', 'business-id-11', TRUE, 1, 'SIMPSONS2020X00', 'INTERV5', 1, 'OU-NORTH'),
    ('12', 'business-id-12', TRUE, 2, 'SIMPSONS2020X00', 'INTERV5', 2, 'OU-NORTH'),
    ('13', 'business-id-13', FALSE, 3, 'SIMPSONS2020X00', 'INTERV5', 3, 'OU-NORTH'),
    ('14', 'business-id-14', FALSE, 4, 'SIMPSONS2020X00', 'INTERV5', 4, 'OU-NORTH'),
    ('20', 'business-id-20', FALSE, 5, 'VQS2021X00', 'INTERV5', 5, 'OU-NORTH'),
    ('21', 'business-id-21', FALSE, 6, 'VQS2021X00', 'INTERV5', 6, 'OU-NORTH'),
    ('22', 'business-id-22', FALSE, 7, 'VQS2021X00', 'INTERV5', 7, 'OU-NORTH'),
    ('23', 'business-id-23', FALSE, 8, 'VQS2021X00', 'INTERV5', 8, 'OU-NORTH'),
    ('PROTO01', 'business-id-proto01', TRUE, 9, 'AQV2023X00', 'INTERV5', 9, 'OU-NORTH'),
    ('PROTO02', 'business-id-proto02', TRUE, 10, 'AQV2023X00', 'INTERV5', 10, 'OU-NORTH'),
    ('PROTO03', 'business-id-proto03', FALSE, 11, 'AQV2023X00', 'INTERV5', 11, 'OU-NORTH'),
    ('PROTO04', 'business-id-proto04', FALSE, 12, 'AQV2023X00', 'INTERV5', 12, 'OU-NORTH'),
    ('PROTO05', 'business-id-proto05', FALSE, 13, 'AQV2023X00', 'INTERV5', 13, 'OU-NORTH'),
    ('PROTO06', 'business-id-proto06', FALSE, 14, 'AQV2023X00', 'INTERV5', 14, 'OU-NORTH'),
    ('PROTO07', 'business-id-proto07', FALSE, 15, 'AQV2023X00', 'INTERV5', 15, 'OU-NORTH'),
    ('PROTO08', 'business-id-proto08', FALSE, 16, 'AQV2023X00', 'INTERV5', 16, 'OU-NORTH'),
    ('PROTO09', 'business-id-proto09', TRUE, 17, 'AQV2023X00', NULL, 17, 'OU-NORTH'),
    ('PROTO10', 'business-id-proto10', TRUE, 18, 'AQV2023X00', 'INTERV1', 18, 'OU-NORTH'),
    ('PROTO11', 'business-id-proto11', TRUE, 19, 'AQV2023X00', 'INTERV1', 19, 'OU-NORTH'),
    ('PROTO12', 'business-id-proto12', FALSE, 20, 'AQV2023X00', 'INTERV2', 20, 'OU-NORTH'),
    ('PROTO13', 'business-id-proto13', FALSE, 21, 'AQV2023X00', 'INTERV3', 21, 'OU-NORTH'),
    ('PROTO14', 'business-id-proto14', FALSE, 22, 'AQV2023X00', 'INTERV1', 22, 'OU-NORTH'),
    ('PROTO15', 'business-id-proto15', FALSE, 23, 'AQV2023X00', 'INTERV2', 23, 'OU-NORTH'),
    ('PROTO16', 'business-id-proto16', FALSE, 24, 'AQV2023X00', 'INTERV4', 24, 'OU-NORTH'),
    ('PROTO17', 'business-id-proto17', FALSE, 25, 'AQV2023X00', 'INTERV4', 25, 'OU-NORTH'),
    ('PROTO18', 'business-id-proto18', TRUE, 26, 'AQV2023X00', NULL, 26, 'OU-NORTH'),
    ('PROTO19', 'business-id-proto19', TRUE, 27, 'AQV2023X00', NULL, 27, 'OU-NORTH'),
    ('PROTO20', 'business-id-proto20', TRUE, 28, 'AQV2023X00', NULL, 28, 'OU-NORTH'),
    ('PROTO21', 'business-id-proto21', TRUE, 29, 'AQV2024X00', NULL, 29, 'OU-NORTH'),
    ('PROTO22', 'business-id-proto22', TRUE, 30, 'AQV2024X00', 'INTERV5', 30, 'OU-NORTH'),
    ('PROTO23', 'business-id-proto23', TRUE, 31, 'AQV2024X00', 'INTERV5', 31, 'OU-NORTH'),
    ('PROTO24', 'business-id-proto24', FALSE, 32, 'AQV2024X00', 'INTERV5', 32, 'OU-NORTH'),
    ('PROTO25', 'business-id-proto25', FALSE, 33, 'AQV2024X00', 'INTERV5', 33, 'OU-NORTH'),
    ('PROTO26', 'business-id-proto26', FALSE, 34, 'AQV2024X00', 'INTERV5', 34, 'OU-NORTH'),
    ('PROTO27', 'business-id-proto27', FALSE, 35, 'AQV2024X00', 'INTERV5', 35, 'OU-NORTH'),
    ('PROTO28', 'business-id-proto28', FALSE, 36, 'AQV2024X00', 'INTERV5', 36, 'OU-NORTH'),
    ('PROTO29', 'business-id-proto29', FALSE, 37, 'AQV2024X00', 'INTERV5', 37, 'OU-NORTH'),
    ('PROTO30', 'business-id-proto30', TRUE, 38, 'AQV2024X00', 'INTERV5', 38, 'OU-NORTH'),
    ('SABIANE01', 'business-id-sabiane01', TRUE, 39, 'INDTEL2025X00', 'INTERV1', 39, 'OU-NORTH'),
    ('SABIANE02', 'business-id-sabiane02', TRUE, 40, 'INDTEL2025X00', 'INTERV1', 40, 'OU-NORTH'),
    ('SABIANE03', 'business-id-sabiane03', TRUE, 41, 'IASCO2025X00', 'INTERV1', 41, 'OU-NORTH'),
    ('SABIANE04', 'business-id-sabiane04', TRUE, 42, 'IASCO2025X00', 'INTERV1', 42, 'OU-NORTH'),
    ('SABIANE05', 'business-id-sabiane05', TRUE, 43, 'NOIDENT2025X00', 'INTERV1', 43, 'OU-NORTH'),
    ('SABIANE06', 'business-id-sabiane06', TRUE, 44, 'HOUSEF2F2025X00', 'INTERV1', 44, 'OU-NORTH'),
    ('SABIANE07', 'business-id-sabiane07', TRUE, 45, 'HOUSETEL2025X00', 'INTERV1', 45, 'OU-NORTH'),
    ('SABIANE08', 'business-id-sabiane08', TRUE, 46, 'HOUSETELWSR2025X00', 'INTERV1', 46, 'OU-NORTH'),
    ('SABIANE09', 'business-id-sabiane09', TRUE, 47, 'SRCVREINT2025X00', 'INTERV1', 47, 'OU-NORTH'),
    ('SABIANE10', 'business-id-sabiane10', TRUE, 48, 'INDTELNOR2025X00', 'INTERV1', 48, 'OU-NORTH'),
    ('SABIANE11', 'business-id-sabiane11', TRUE, 49, 'INDF2F2025X00', 'INTERV1', 49, 'OU-NORTH'),
    ('SABIANE12', 'business-id-sabiane12', TRUE, 50, 'INDF2F2025X00', 'INTERV1', 50, 'OU-NORTH'),
    ('SABIANE13', 'business-id-sabiane13', TRUE, 51, 'HOUSEF2F2025X00', 'INTERV1', 51, 'OU-NORTH'),
    ('SABIANE14', 'business-id-sabiane14', TRUE, 52, 'HOUSETEL2025X00', 'INTERV1', 52, 'OU-NORTH'),
    ('SABIANE15', 'business-id-sabiane15', TRUE, 53, 'HOUSETELWSR2025X00', 'INTERV1', 53, 'OU-NORTH');

INSERT INTO public.person (id, email, favorite_email, first_name, last_name, birthdate, title, privileged, survey_unit_id) VALUES
    (1,  'test@test.com', TRUE, 'Ted',         'Farmer',      315532800000, 0, TRUE,  '11'),
    (2,  'test@test.com', TRUE, 'Cecilia',     'Ortega',      325242830770, 1, TRUE,  '12'),
    (3,  'test@test.com', TRUE, 'Claude',      'Watkins',     334952861540, 0, TRUE,  '13'),
    (4,  'test@test.com', TRUE, 'Veronica',    'Baker',       344662892310, 1, TRUE,  '14'),
    (5,  'test@test.com', TRUE, 'Christine',   'Aguilar',     354372923080, 1, FALSE, '11'),
    (6,  'test@test.com', TRUE, 'Louise',      'Walker',      364082953850, 1, FALSE, '11'),
    (7,  'test@test.com', TRUE, 'Anthony',     'Bennett',     373792984620, 0, FALSE, '12'),
    (8,  'test@test.com', TRUE, 'Christopher', 'Lewis',       383503015390, 0, FALSE, '14'),
    (9,  'test@test.com', TRUE, 'Harriette',   'Raymond',     393213046160, 1, TRUE,  '20'),
    (10, 'test@test.com', TRUE, 'Aimée',       'Lamothe',     402923076930, 0, TRUE,  '21'),
    (11, 'test@test.com', TRUE, 'Perrin',      'Blanchard',   412633107700, 0, TRUE,  '22'),
    (12, 'test@test.com', TRUE, 'Artus',       'Arnoux',      422343138470, 0, TRUE,  '23'),
    (13, 'test@test.com', TRUE, 'Isabelle',    'Moreau',      567993600020, 1, TRUE,  'PROTO01'),
    (14, 'test@test.com', TRUE, 'Julien',      'Dupont',      577703630790, 0, TRUE,  'PROTO02'),
    (15, 'test@test.com', TRUE, 'Sophie',      'Martin',      587413661560, 1, FALSE,  'PROTO03'),
    (16, 'test@test.com', TRUE, 'Marc',        'Lefevre',     597123692330, 0, TRUE,  'PROTO04'),
    (17, 'test@test.com', TRUE, 'Nathalie',    'Bernard',     606833723100, 1, FALSE,  'PROTO05'),
    (18, 'test@test.com', TRUE, 'Olivier',     'Girard',      616543753870, 0, FALSE,  'PROTO06'),
    (19, 'test@test.com', TRUE, 'Camille',     'Renaud',      626253784640, 1, TRUE,  'PROTO07'),
    (20, 'test@test.com', TRUE, 'Pauline',     'Durand',      635963815410, 1, TRUE,  'PROTO08'),
    (21, 'test@test.com', TRUE, 'Antoine',     'Morel',       645673846180, 0, TRUE,  'PROTO09'),
    (22, 'test@test.com', TRUE, 'Marine',      'Lambert',     655383876950, 1, TRUE,  'PROTO10'),
    (23, 'test@test.com', TRUE, 'Alexandre',   'Faure',       665093907720, 0, TRUE,  'PROTO11'),
    (24, 'test@test.com', TRUE, 'Elodie',      'Renault',     674803938490, 1, TRUE,  'PROTO12'),
    (25, 'test@test.com', TRUE, 'Maxime',      'Petit',       684513969260, 0, TRUE,  'PROTO13'),
    (26, 'test@test.com', TRUE, 'Amélie',      'Gautier',     694224000030, 1, TRUE,  'PROTO14'),
    (27, 'test@test.com', TRUE, 'Damien',      'Roux',        703934030800, 0, TRUE,  'PROTO15'),
    (28, 'test@test.com', TRUE, 'Claire',      'Dubois',      713644061570, 1, TRUE,  'PROTO16'),
    (29, 'test@test.com', TRUE, 'Hugo',        'Simon',       723354092340, 0, TRUE,  'PROTO17'),
    (30, 'test@test.com', TRUE, 'Chloé',       'Lemoine',     733064123110, 1, TRUE,  'PROTO18'),
    (31, 'test@test.com', TRUE, 'Romain',      'Bertrand',    742774153880, 0, TRUE,  'PROTO19'),
    (32, 'test@test.com', TRUE, 'Alice',       'Renault',     752484184650, 1, TRUE,  'PROTO20'),
    (33, 'test@test.com', TRUE, 'Guillaume',   'Faure',       762194215420, 0, TRUE,  'PROTO21'),
    (34, 'test@test.com', TRUE, 'Laurent',     'Neville',     674803938490, 1, TRUE,  'PROTO22'),
    (35, 'test@test.com', TRUE, 'Harry',       'Cover',       684513969260, 0, TRUE,  'PROTO23'),
    (36, 'test@test.com', TRUE, 'Ella',        'Gance',       694224000030, 1, TRUE,  'PROTO24'),
    (37, 'test@test.com', TRUE, 'Jean',        'Neige',       703934030800, 0, TRUE,  'PROTO25'),
    (38, 'test@test.com', TRUE, 'Phil',        'Harmonie',    713644061570, 1, TRUE,  'PROTO26'),
    (39, 'test@test.com', TRUE, 'Alain',       'Thé',         723354092340, 0, TRUE,  'PROTO27'),
    (40, 'test@test.com', TRUE, 'Brie',        'Savarin',     733064123110, 1, TRUE,  'PROTO28'),
    (41, 'test@test.com', TRUE, 'Cécile',      'Houte',       742774153880, 0, TRUE,  'PROTO29'),
    (42, 'test@test.com', TRUE, 'Dan',         'Tifrice',     752484184650, 1, TRUE,  'PROTO30'),
    (43, 'test@test.com', TRUE, 'Emile',       'Pates',       771904246190, 0, TRUE,  'SABIANE01'),
    (44, 'test@test.com', TRUE, 'Marine',      'Lefevre',     781614276960, 0, TRUE,  'SABIANE02'),
    (45, 'test@test.com', TRUE, 'Thierry',     'Bernard',     791324307730, 0, TRUE,  'SABIANE03'),
    (46, 'test@test.com', TRUE, 'Sylvie',      'Martin',      801034338500, 0, TRUE,  'SABIANE04'),
    (47, 'test@test.com', TRUE, 'Laurence',    'Girard',      810744369270, 0, TRUE,  'SABIANE05'),
    (48, 'test@test.com', TRUE, 'Dominique',   'Moreau',      820454400040, 0, TRUE,  'SABIANE06'),
    (49, 'test@test.com', TRUE, 'Juliette',    'Roussel',     830164430810, 0, TRUE,  'SABIANE07'),
    (50, 'test@test.com', TRUE, 'Pascal',      'Dubois',      839874461580, 0, TRUE,  'SABIANE08'),
    (51, 'test@test.com', TRUE, 'Amandine',    'Perrin',      849584492350, 0, TRUE,  'SABIANE09'),
    (52, 'test@test.com', TRUE, 'Nicolas',     'Lambert',     859294523120, 0, TRUE,  'SABIANE10'),
    (53, 'test@test.com', TRUE, 'Bruno',       'Simon',       869004553890, 0, TRUE,  'SABIANE11'),
    (54, 'test@test.com', TRUE, 'Véronique',   'Petit',       878714584660, 0, TRUE,  'SABIANE12'),
    (55, 'test@test.com', TRUE, 'Philippe',    'Garnier',     888424615430, 0, TRUE,  'SABIANE13'),
    (56, 'test@test.com', TRUE, 'Catherine',   'Renault',     898134646200, 0, TRUE,  'SABIANE14'),
    (57, 'test@test.com', TRUE, 'Jacques',     'Faure',       907844676970, 0, TRUE,  'SABIANE15'),
    (58, 'test@test.com', TRUE, 'Marion',      'Cotille',     917554707740, 1, FALSE, 'PROTO01'),
    (59, 'test@test.com', TRUE, 'Arthur',      'Couyer',      927264738510, 1, TRUE, 'PROTO03'),
    (60, 'test@test.com', TRUE, 'Kaa',         'Melott',      936974769280, 0, TRUE, 'PROTO05'),
    (61, 'test@test.com', TRUE, 'Père',        'Seval',       946684800050, 0, TRUE, 'PROTO06');

INSERT INTO public.phone_number (id, favorite, number, source, person_id) VALUES
    (1,  TRUE, '+33677542802', 0, 1),
    (2,  FALSE,'+33677542803', 0, 1),
    (3,  TRUE, '+33677542804', 0, 2),
    (4,  TRUE, '+33677542805', 0, 3),
    (5,  TRUE, '+33677542806', 0, 4),
    (6,  TRUE, '+33677542807', 0, 5),
    (7,  TRUE, '+33677542808', 0, 6),
    (8,  TRUE, '+33677542809', 0, 7),
    (9,  TRUE, '+33677542810', 0, 8),
    (10, TRUE, '+33677542811', 0, 9),
    (11, TRUE, '+33677542812', 0, 10),
    (12, TRUE, '+33677542813', 0, 11),
    (13, TRUE, '+33677542814', 0, 12),
    (28, TRUE, '+33677542829', 0, 13),
    (29, TRUE, '+33677542830', 0, 14),
    (30, TRUE, '+33677542831', 0, 15),
    (31, TRUE, '+33677542832', 0, 16),
    (32, TRUE, '+33677542833', 0, 17),
    (33, TRUE, '+33677542834', 0, 18),
    (34, TRUE, '+33677542835', 0, 19),
    (35, TRUE, '+33677542836', 0, 20),
    (36, TRUE, '+33677542837', 0, 21),
    (37, TRUE, '+33677542838', 0, 22),
    (38, TRUE, '+33677542839', 0, 23),
    (39, TRUE, '+33677542840', 0, 24),
    (40, TRUE, '+33677542841', 0, 25),
    (41, TRUE, '+33677542842', 0, 26),
    (42, TRUE, '+33677542843', 0, 27),
    (43, TRUE, '+33677542844', 0, 28),
    (44, TRUE, '+33677542845', 0, 29),
    (45, TRUE, '+33677542846', 0, 30),
    (46, TRUE, '+33677542847', 0, 31),
    (47, TRUE, '+33677542848', 0, 32),
    (48, TRUE, '+33677542849', 0, 33),
    (49, TRUE, '+33677542850', 0, 34),
    (50, TRUE, '+33677542851', 0, 35),
    (51, TRUE, '+33677542852', 0, 36),
    (52, TRUE, '+33677542853', 0, 37),
    (53, TRUE, '+33677542854', 0, 38),
    (54, TRUE, '+33677542855', 0, 39),
    (55, TRUE, '+33677542856', 0, 40),
    (56, TRUE, '+33677542857', 0, 41),
    (57, TRUE, '+33677542858', 0, 42),
    (58, TRUE, '+33677542859', 0, 43),
    (59, TRUE, '+33677542860', 0, 44),
    (60, TRUE, '+33677542861', 0, 45),
    (61, TRUE, '+33677542862', 0, 46),
    (62, TRUE, '+33677542863', 0, 47),
    (63, TRUE, '+33677542864', 0, 48),
    (64, TRUE, '+33677542865', 0, 49),
    (65, TRUE, '+33677542866', 0, 50),
    (66, TRUE, '+33677542867', 0, 51),
    (67, TRUE, '+33677542868', 0, 52),
    (68, TRUE, '+33677542860', 0, 53),
    (69, TRUE, '+33677542861', 0, 54),
    (70, TRUE, '+33677542862', 0, 55),
    (71, TRUE, '+33677542863', 0, 56),
    (72, TRUE, '+33677542864', 0, 57),
    (73, TRUE, '+33677542865', 0, 58),
    (74, TRUE, '+33677542866', 0, 59),
    (75, TRUE, '+33677542866', 0, 60),
    (76, TRUE, '+33677542866', 0, 61);


INSERT INTO public.comment (id, type, value, survey_unit_id) VALUES
    (1, 'INTERVIEWER', 'un commentaire', '13');

INSERT INTO closing_cause (id, date, type, survey_unit_id) VALUES
    (1, EXTRACT(EPOCH FROM NOW() - INTERVAL '3 days') * 1000, 'NPI', '11');


INSERT INTO public.identification (id, survey_unit_id, identification_type, identification, access, situation, category, occupant) VALUES
    (1, '11', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (2, '12', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (3, '13', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (4, '14', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (5, '20', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (6, '21', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (7, '22', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (8, '23', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (9, 'PROTO01', 'HOUSEF2F', NULL, NULL, NULL, NULL, NULL),
    (10, 'PROTO02', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (11, 'PROTO03', 'HOUSEF2F', NULL, NULL, NULL, NULL, NULL),
    (12, 'PROTO04', 'HOUSEF2F', 'UNIDENTIFIED', NULL, NULL, NULL, NULL),
    (13, 'PROTO05', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', NULL, NULL, NULL),
    (14, 'PROTO06', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', NULL, NULL),
    (15, 'PROTO07', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', NULL),
    (16, 'PROTO08', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (17, 'PROTO09', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (18, 'PROTO10', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (19, 'PROTO11', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (20, 'PROTO12', 'HOUSEF2F', 'UNIDENTIFIED', NULL, NULL, NULL, NULL),
    (21, 'PROTO13', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', NULL, NULL, NULL),
    (22, 'PROTO14', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', NULL, NULL),
    (23, 'PROTO15', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', NULL),
    (24, 'PROTO16', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (25, 'PROTO17', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (26, 'PROTO18', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (27, 'PROTO19', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (28, 'PROTO20', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (29, 'PROTO21', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (30, 'PROTO22', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (31, 'PROTO23', 'HOUSEF2F', NULL, NULL, NULL, NULL, NULL),
    (32, 'PROTO24', 'HOUSEF2F', 'UNIDENTIFIED', NULL, NULL, NULL, NULL),
    (33, 'PROTO25', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', NULL, NULL, NULL),
    (34, 'PROTO26', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', NULL, NULL),
    (35, 'PROTO27', 'HOUSEF2F', 'UNIDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', NULL),
    (36, 'PROTO28', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (37, 'PROTO29', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (38, 'PROTO30', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (39, 'SABIANE01', 'INDTEL', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (40, 'SABIANE02', 'INDTEL',         NULL,         NULL,  NULL,      NULL,      NULL),
    (41, 'SABIANE03', 'INDTEL', NULL,         NULL,         NULL,      NULL,      NULL),
    (42, 'SABIANE04', 'INDTEL', 'IDENTIFIED', NULL,         NULL,      NULL,      NULL),
    (43, 'SABIANE05', 'INDTEL', NULL, NULL,      NULL,      NULL,      NULL),
    (44, 'SABIANE06', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY',      NULL,      NULL),
    (45, 'SABIANE07', 'HOUSETEL', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY',      NULL),
    (46, 'SABIANE08', 'HOUSETEL', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED'),
    (47, 'SABIANE09', 'SRCVREINT',         NULL,         NULL,  NULL,      NULL,      NULL),
    (48, 'SABIANE10', 'INDTEL', NULL,         NULL,         NULL,      NULL,      NULL),
    (49, 'SABIANE11', 'INDF2F', 'IDENTIFIED', NULL,         NULL,      NULL,      NULL),
    (50, 'SABIANE12', 'INDF2F', 'IDENTIFIED', 'ACC',      NULL,      NULL,      NULL),
    (51, 'SABIANE13', 'HOUSEF2F', 'IDENTIFIED', 'ACC', 'ORDINARY',      NULL,      NULL),
    (52, 'SABIANE14', 'HOUSETEL', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY',      NULL),
    (53, 'SABIANE15', 'HOUSETEL', 'IDENTIFIED', 'ACC', 'ORDINARY', 'PRIMARY', 'IDENTIFIED');


INSERT INTO public.state (id, date, type, survey_unit_id) VALUES
    (1, 1741521660000, 'VIN', '11'),
    (2, 1741521720000, 'TBR', '11'),
    (3, 1741521780000, 'TBR', '12'),
    (4, 1741521840000, 'TBR', '13'),
    (5, 1741521900000, 'TBR', '14'),
    (6, 1741521960000, 'VIC', '20'),
    (7, 1741522020000, 'VIC', '21'),
    (8, 1741522080000, 'FIN', '22'),
    (9, 1741522140000, 'VIC', '23'),
    (10, 1741523100000, 'NVM', 'PROTO01'),
    (11, 1741523112000, 'ANV', 'PROTO01'),
    (12, 1741523118000, 'VIN', 'PROTO01'),
    (13, 1741523124000, 'VIC', 'PROTO01'),
    (14, 1741523130000, 'PRC', 'PROTO01'),
    (15, 1741523100000, 'NVM', 'PROTO02'),
    (16, 1741523112000, 'ANV', 'PROTO02'),
    (17, 1741523118000, 'VIN', 'PROTO02'),
    (18, 1741523124000, 'VIC', 'PROTO02'),
    (19, 1741523130000, 'PRC', 'PROTO02'),
    (20, 1741523136000, 'INS', 'PROTO02'),
    (21, 1741523142000, 'WFT', 'PROTO02'),
    (22, 1741523148000, 'WFS', 'PROTO02'),
    (23, 1741523154000, 'FIN', 'PROTO02'),
    (24, 1741523160000, 'TBR', 'PROTO02'),
    (25, 1741523200000, 'NVM', 'PROTO03'),
    (26, 1741523212000, 'ANV', 'PROTO03'),
    (27, 1741523218000, 'VIN', 'PROTO03'),
    (28, 1741523224000, 'VIC', 'PROTO03'),
    (29, 1741523230000, 'PRC', 'PROTO03'),
    (30, 1741523236000, 'INS', 'PROTO03'),
    (31, 1741523100000, 'NVM', 'PROTO04'),
    (32, 1741523112000, 'ANV', 'PROTO04'),
    (33, 1741523118000, 'VIN', 'PROTO04'),
    (34, 1741523124000, 'VIC', 'PROTO04'),
    (35, 1741523130000, 'PRC', 'PROTO04'),
    (36, 1741523400000, 'NVM', 'PROTO05'),
    (37, 1741523412000, 'ANV', 'PROTO05'),
    (38, 1741523418000, 'VIN', 'PROTO05'),
    (39, 1741523424000, 'VIC', 'PROTO05'),
    (40, 1741523430000, 'PRC', 'PROTO05'),
    (41, 1741523436000, 'INS', 'PROTO05'),
    (42, 1741523500000, 'NVM', 'PROTO06'),
    (43, 1741523512000, 'ANV', 'PROTO06'),
    (44, 1741523518000, 'VIN', 'PROTO06'),
    (45, 1741523524000, 'VIC', 'PROTO06'),
    (46, 1741523530000, 'PRC', 'PROTO06'),
    (47, 1741523536000, 'INS', 'PROTO06'),
    (48, 1741523542000, 'WFT', 'PROTO06'),
    (49, 1741523548000, 'WFS', 'PROTO06'),
    (50, 1741523554000, 'FIN', 'PROTO06'),
    (51, 1741523560000, 'TBR', 'PROTO06'),
    (52, 1741523600000, 'NVM', 'PROTO07'),
    (53, 1741523612000, 'ANV', 'PROTO07'),
    (54, 1741523618000, 'VIN', 'PROTO07'),
    (55, 1741523624000, 'VIC', 'PROTO07'),
    (56, 1741523630000, 'PRC', 'PROTO07'),
    (57, 1741523636000, 'INS', 'PROTO07'),
    (58, 1741523700000, 'NVM', 'PROTO08'),
    (59, 1741523712000, 'ANV', 'PROTO08'),
    (60, 1741523718000, 'VIN', 'PROTO08'),
    (61, 1741523724000, 'VIC', 'PROTO08'),
    (62, 1741523730000, 'PRC', 'PROTO08'),
    (63, 1741523736000, 'INS', 'PROTO08'),
    (64, 1741523742000, 'WFT', 'PROTO08'),
    (65, 1741523748000, 'WFS', 'PROTO08'),
    (66, 1741523754000, 'FIN', 'PROTO08'),
    (67, 1741523760000, 'TBR', 'PROTO08'),
    (68, 1741523800000, 'NVM', 'PROTO09'),
    (69, 1741523812000, 'ANV', 'PROTO09'),
    (70, 1741523818000, 'VIN', 'PROTO09'),
    (71, 1741523824000, 'VIC', 'PROTO09'),
    (72, 1741523830000, 'PRC', 'PROTO09'),
    (73, 1741523836000, 'INS', 'PROTO09'),
    (74, 1741523900000, 'NVM', 'PROTO10'),
    (75, 1741523912000, 'ANV', 'PROTO10'),
    (76, 1741523918000, 'VIN', 'PROTO10'),
    (77, 1741523924000, 'VIC', 'PROTO10'),
    (78, 1741523930000, 'PRC', 'PROTO10'),
    (79, 1741523936000, 'INS', 'PROTO10'),
    (80, 1741524000000, 'NVM', 'PROTO11'),
    (81, 1741524012000, 'ANV', 'PROTO11'),
    (82, 1741524018000, 'VIN', 'PROTO11'),
    (83, 1741524024000, 'VIC', 'PROTO11'),
    (84, 1741524030000, 'PRC', 'PROTO11'),
    (85, 1741524036000, 'INS', 'PROTO11'),
    (86, 1741524100000, 'NVM', 'PROTO12'),
    (87, 1741524112000, 'ANV', 'PROTO12'),
    (88, 1741524118000, 'VIN', 'PROTO12'),
    (89, 1741524124000, 'VIC', 'PROTO12'),
    (90, 1741524130000, 'PRC', 'PROTO12'),
    (91, 1741524136000, 'INS', 'PROTO12'),
    (92, 1741524200000, 'NVM', 'PROTO13'),
    (93, 1741524212000, 'ANV', 'PROTO13'),
    (94, 1741524218000, 'VIN', 'PROTO13'),
    (95, 1741524224000, 'VIC', 'PROTO13'),
    (96, 1741524230000, 'PRC', 'PROTO13'),
    (97, 1741524236000, 'INS', 'PROTO13'),
    (98, 1741524242000, 'WFT', 'PROTO13'),
    (99, 1741524248000, 'WFS', 'PROTO13'),
    (100, 1741524254000, 'FIN', 'PROTO13'),
    (101, 1741524300000, 'NVM', 'PROTO14'),
    (102, 1741524312000, 'ANV', 'PROTO14'),
    (103, 1741524318000, 'VIN', 'PROTO14'),
    (104, 1741524324000, 'VIC', 'PROTO14'),
    (105, 1741524330000, 'PRC', 'PROTO14'),
    (106, 1741524336000, 'INS', 'PROTO14'),
    (107, 1741524400000, 'NVM', 'PROTO15'),
    (108, 1741524412000, 'ANV', 'PROTO15'),
    (109, 1741524418000, 'VIN', 'PROTO15'),
    (110, 1741524424000, 'VIC', 'PROTO15'),
    (111, 1741524430000, 'PRC', 'PROTO15'),
    (112, 1741524436000, 'INS', 'PROTO15'),
    (113, 1741524500000, 'NVM', 'PROTO16'),
    (114, 1741524512000, 'ANV', 'PROTO16'),
    (115, 1741524518000, 'VIN', 'PROTO16'),
    (116, 1741524524000, 'VIC', 'PROTO16'),
    (117, 1741524530000, 'PRC', 'PROTO16'),
    (118, 1741524536000, 'INS', 'PROTO16'),
    (119, 1741524542000, 'WFT', 'PROTO16'),
    (120, 1741524548000, 'WFS', 'PROTO16'),
    (121, 1741524554000, 'FIN', 'PROTO16'),
    (122, 1741524560000, 'TBR', 'PROTO16'),
    (123, 1741524600000, 'NVM', 'PROTO17'),
    (124, 1741524612000, 'ANV', 'PROTO17'),
    (125, 1741524618000, 'VIN', 'PROTO17'),
    (126, 1741524624000, 'VIC', 'PROTO17'),
    (127, 1741524630000, 'PRC', 'PROTO17'),
    (128, 1741524636000, 'INS', 'PROTO17'),
    (129, 1741524700000, 'NVM', 'PROTO18'),
    (130, 1741524712000, 'ANV', 'PROTO18'),
    (131, 1741524718000, 'VIN', 'PROTO18'),
    (132, 1741524724000, 'VIC', 'PROTO18'),
    (133, 1741524730000, 'PRC', 'PROTO18'),
    (134, 1741524736000, 'INS', 'PROTO18'),
    (135, 1741524800000, 'NVM', 'PROTO19'),
    (136, 1741524812000, 'ANV', 'PROTO19'),
    (137, 1741524818000, 'VIN', 'PROTO19'),
    (138, 1741524824000, 'VIC', 'PROTO19'),
    (139, 1741524830000, 'PRC', 'PROTO19'),
    (140, 1741524836000, 'INS', 'PROTO19'),
    (141, 1741524842000, 'WFT', 'PROTO19'),
    (142, 1741524848000, 'WFS', 'PROTO19'),
    (143, 1741524854000, 'FIN', 'PROTO19'),
    (144, 1741524900000, 'NVM', 'PROTO20'),
    (145, 1741524912000, 'ANV', 'PROTO20'),
    (146, 1741524918000, 'VIN', 'PROTO20'),
    (147, 1741524924000, 'VIC', 'PROTO20'),
    (148, 1741524930000, 'PRC', 'PROTO20'),
    (149, 1741524936000, 'INS', 'PROTO20'),
    (150, 1741525000000, 'NVM', 'PROTO21'),
    (151, 1741525012000, 'ANV', 'PROTO21'),
    (152, 1741525018000, 'VIN', 'PROTO21'),
    (153, 1741525024000, 'VIC', 'PROTO21'),
    (154, 1741525030000, 'PRC', 'PROTO21'),
    (155, 1741525036000, 'INS', 'PROTO21'),
    (231, 1741523100000, 'NVM', 'PROTO22'),
    (232, 1741523112000, 'ANV', 'PROTO22'),
    (233, 1741523118000, 'VIN', 'PROTO22'),
    (234, 1741523124000, 'VIC', 'PROTO22'),
    (235, 1741523130000, 'PRC', 'PROTO22'),
    (236, 1741523136000, 'INS', 'PROTO22'),
    (237, 1741523142000, 'WFT', 'PROTO22'),
    (238, 1741523148000, 'WFS', 'PROTO22'),
    (239, 1741523154000, 'FIN', 'PROTO22'),
    (240, 1741523160000, 'TBR', 'PROTO22'),
    (241, 1741523200000, 'NVM', 'PROTO23'),
    (242, 1741523212000, 'ANV', 'PROTO23'),
    (243, 1741523218000, 'VIN', 'PROTO23'),
    (244, 1741523224000, 'VIC', 'PROTO23'),
    (245, 1741523230000, 'PRC', 'PROTO23'),
    (246, 1741523236000, 'INS', 'PROTO23'),
    (247, 1741523100000, 'NVM', 'PROTO24'),
    (248, 1741523112000, 'ANV', 'PROTO24'),
    (249, 1741523118000, 'VIN', 'PROTO24'),
    (250, 1741523124000, 'VIC', 'PROTO24'),
    (251, 1741523130000, 'PRC', 'PROTO24'),
    (252, 1741523400000, 'NVM', 'PROTO25'),
    (253, 1741523412000, 'ANV', 'PROTO25'),
    (254, 1741523418000, 'VIN', 'PROTO25'),
    (255, 1741523424000, 'VIC', 'PROTO25'),
    (256, 1741523430000, 'PRC', 'PROTO25'),
    (257, 1741523436000, 'INS', 'PROTO25'),
    (258, 1741523500000, 'NVM', 'PROTO26'),
    (259, 1741523512000, 'ANV', 'PROTO26'),
    (260, 1741523518000, 'VIN', 'PROTO26'),
    (261, 1741523524000, 'VIC', 'PROTO26'),
    (262, 1741523530000, 'PRC', 'PROTO26'),
    (263, 1741523536000, 'INS', 'PROTO26'),
    (264, 1741523542000, 'WFT', 'PROTO26'),
    (265, 1741523548000, 'WFS', 'PROTO26'),
    (266, 1741523554000, 'FIN', 'PROTO26'),
    (267, 1741523560000, 'TBR', 'PROTO26'),
    (268, 1741523600000, 'NVM', 'PROTO27'),
    (269, 1741523612000, 'ANV', 'PROTO27'),
    (270, 1741523618000, 'VIN', 'PROTO27'),
    (271, 1741523624000, 'VIC', 'PROTO27'),
    (272, 1741523630000, 'PRC', 'PROTO27'),
    (273, 1741523636000, 'INS', 'PROTO27'),
    (274, 1741523700000, 'NVM', 'PROTO28'),
    (275, 1741523712000, 'ANV', 'PROTO28'),
    (276, 1741523718000, 'VIN', 'PROTO28'),
    (277, 1741523724000, 'VIC', 'PROTO28'),
    (278, 1741523730000, 'PRC', 'PROTO28'),
    (279, 1741523736000, 'INS', 'PROTO28'),
    (280, 1741523742000, 'WFT', 'PROTO28'),
    (281, 1741523748000, 'WFS', 'PROTO28'),
    (282, 1741523754000, 'FIN', 'PROTO28'),
    (283, 1741523760000, 'TBR', 'PROTO28'),
    (284, 1741523800000, 'NVM', 'PROTO29'),
    (285, 1741523812000, 'ANV', 'PROTO29'),
    (286, 1741523818000, 'VIN', 'PROTO29'),
    (287, 1741523824000, 'VIC', 'PROTO29'),
    (288, 1741523830000, 'PRC', 'PROTO29'),
    (289, 1741523836000, 'INS', 'PROTO29'),
    (290, 1741523900000, 'NVM', 'PROTO30'),
    (291, 1741523912000, 'ANV', 'PROTO30'),
    (292, 1741523918000, 'VIN', 'PROTO30'),
    (293, 1741523924000, 'VIC', 'PROTO30'),
    (294, 1741523930000, 'PRC', 'PROTO30'),
    (295, 1741523936000, 'INS', 'PROTO30'),
    (156, 1741524300000, 'NVM', 'SABIANE01'),
    (157, 1741524312000, 'ANV', 'SABIANE01'),
    (158, 1741524318000, 'VIN', 'SABIANE01'),
    (159, 1741524324000, 'VIC', 'SABIANE01'),
    (160, 1741524330000, 'PRC', 'SABIANE01'),
    (161, 1741524360000, 'NVM', 'SABIANE02'),
    (162, 1741524372000, 'ANV', 'SABIANE02'),
    (163, 1741524378000, 'VIN', 'SABIANE02'),
    (164, 1741524384000, 'VIC', 'SABIANE02'),
    (165, 1741524390000, 'PRC', 'SABIANE02'),
    (166, 1741524420000, 'NVM', 'SABIANE03'),
    (167, 1741524432000, 'ANV', 'SABIANE03'),
    (168, 1741524438000, 'VIN', 'SABIANE03'),
    (169, 1741524444000, 'VIC', 'SABIANE03'),
    (170, 1741524450000, 'PRC', 'SABIANE03'),
    (171, 1741524480000, 'NVM', 'SABIANE04'),
    (172, 1741524492000, 'ANV', 'SABIANE04'),
    (173, 1741524498000, 'VIN', 'SABIANE04'),
    (174, 1741524504000, 'VIC', 'SABIANE04'),
    (175, 1741524510000, 'PRC', 'SABIANE04'),
    (176, 1741524540000, 'NVM', 'SABIANE05'),
    (177, 1741524552000, 'ANV', 'SABIANE05'),
    (178, 1741524558000, 'VIN', 'SABIANE05'),
    (179, 1741524564000, 'VIC', 'SABIANE05'),
    (180, 1741524570000, 'PRC', 'SABIANE05'),
    (181, 1741524600000, 'NVM', 'SABIANE06'),
    (182, 1741524612000, 'ANV', 'SABIANE06'),
    (183, 1741524618000, 'VIN', 'SABIANE06'),
    (184, 1741524624000, 'VIC', 'SABIANE06'),
    (185, 1741524630000, 'PRC', 'SABIANE06'),
    (186, 1741524660000, 'NVM', 'SABIANE07'),
    (187, 1741524672000, 'ANV', 'SABIANE07'),
    (188, 1741524678000, 'VIN', 'SABIANE07'),
    (189, 1741524684000, 'VIC', 'SABIANE07'),
    (190, 1741524690000, 'PRC', 'SABIANE07'),
    (191, 1741524720000, 'NVM', 'SABIANE08'),
    (192, 1741524732000, 'ANV', 'SABIANE08'),
    (193, 1741524738000, 'VIN', 'SABIANE08'),
    (194, 1741524744000, 'VIC', 'SABIANE08'),
    (195, 1741524750000, 'PRC', 'SABIANE08'),
    (196, 1741524780000, 'NVM', 'SABIANE09'),
    (197, 1741524792000, 'ANV', 'SABIANE09'),
    (198, 1741524798000, 'VIN', 'SABIANE09'),
    (199, 1741524804000, 'VIC', 'SABIANE09'),
    (200, 1741524810000, 'PRC', 'SABIANE09'),
    (201, 1741524840000, 'NVM', 'SABIANE10'),
    (202, 1741524852000, 'ANV', 'SABIANE10'),
    (203, 1741524858000, 'VIN', 'SABIANE10'),
    (204, 1741524864000, 'VIC', 'SABIANE10'),
    (205, 1741524870000, 'PRC', 'SABIANE10'),
    (206, 1741524900000, 'NVM', 'SABIANE11'),
    (207, 1741524912000, 'ANV', 'SABIANE11'),
    (208, 1741524918000, 'VIN', 'SABIANE11'),
    (209, 1741524924000, 'VIC', 'SABIANE11'),
    (210, 1741524930000, 'PRC', 'SABIANE11'),
    (211, 1741524960000, 'NVM', 'SABIANE12'),
    (212, 1741524972000, 'ANV', 'SABIANE12'),
    (213, 1741524978000, 'VIN', 'SABIANE12'),
    (214, 1741524984000, 'VIC', 'SABIANE12'),
    (215, 1741524990000, 'PRC', 'SABIANE12'),
    (216, 1741525020000, 'NVM', 'SABIANE13'),
    (217, 1741525032000, 'ANV', 'SABIANE13'),
    (218, 1741525038000, 'VIN', 'SABIANE13'),
    (219, 1741525044000, 'VIC', 'SABIANE13'),
    (220, 1741525050000, 'PRC', 'SABIANE13'),
    (221, 1741525080000, 'NVM', 'SABIANE14'),
    (222, 1741525086000, 'ANV', 'SABIANE14'),
    (223, 1741525092000, 'VIN', 'SABIANE14'),
    (224, 1741525098000, 'VIC', 'SABIANE14'),
    (225, 1741525110000, 'PRC', 'SABIANE14'),
    (226, 1741525140000, 'NVM', 'SABIANE15'),
    (227, 1741525152000, 'ANV', 'SABIANE15'),
    (228, 1741525158000, 'VIN', 'SABIANE15'),
    (229, 1741525164000, 'VIC', 'SABIANE15'),
    (230, 1741525170000, 'PRC', 'SABIANE15');

INSERT INTO public.communication_template (meshuggah_id, medium, type, campaign_id) VALUES
    ('mesh1', 'EMAIL', 'REMINDER', 'SIMPSONS2020X00'),
    ('mesh2', 'LETTER', 'NOTICE', 'SIMPSONS2020X00'),
    ('mesh3', 'EMAIL', 'REMINDER', 'VQS2021X00'),
    ('mesh4', 'LETTER', 'NOTICE', 'VQS2021X00'),
    ('mesh5', 'EMAIL', 'NOTICE', 'VQS2021X00');

INSERT INTO public.communication_request (id, survey_unit_id, emitter, reason, campaign_id, meshuggah_id) VALUES
    (1, '11', 'INTERVIEWER', 'REFUSAL', 'SIMPSONS2020X00', 'mesh1'),
    (2, '11', 'INTERVIEWER', 'UNREACHABLE', 'SIMPSONS2020X00', 'mesh2'),
    (3, '20', 'INTERVIEWER', 'REFUSAL', 'VQS2021X00', 'mesh3'),
    (4, '20', 'INTERVIEWER', 'UNREACHABLE', 'VQS2021X00', 'mesh4');

INSERT INTO public.communication_request_status (communication_request_id, status, date) VALUES
    (1, 'INITIATED', 1721903754305),
    (1, 'READY', 1721903755305),
    (1, 'SUBMITTED', 1721903756305),
    (2, 'INITIATED', 1721903754305),
    (2, 'READY', 1721903756310),
    (3, 'INITIATED', 1721903754205),
    (4, 'INITIATED', 1721903754205);

INSERT INTO public.communication_metadata (survey_unit_id, campaign_id, meshuggah_id, metadata_key, metadata_value) VALUES
    ('11','SIMPSONS2020X00','mesh1','recipient_full_name', 'Albert Einstein'),
    ('11', 'SIMPSONS2020X00','mesh1','recipient_address', '112 Mercer Street, Princeton, New Jersey');

SELECT setval(
    pg_get_serial_sequence('public.communication_request_status', 'id'),
    COALESCE((SELECT MAX(id) FROM public.communication_request_status), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.communication_request', 'id'),
    COALESCE((SELECT MAX(id) FROM public.communication_request), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.communication_metadata', 'id'),
    COALESCE((SELECT MAX(id) FROM public.communication_metadata), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.contact_attempt', 'id'),
    COALESCE((SELECT MAX(id) FROM public.contact_attempt), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.referent', 'id'),
    COALESCE((SELECT MAX(id) FROM public.referent), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.message', 'id'),
    COALESCE((SELECT MAX(id) FROM public.message), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.sample_identifier', 'id'),
    COALESCE((SELECT MAX(id) FROM public.sample_identifier), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.identification', 'id'),
    COALESCE((SELECT MAX(id) FROM public.identification), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.person', 'id'),
    COALESCE((SELECT MAX(id) FROM public.person), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.phone_number', 'id'),
    COALESCE((SELECT MAX(id) FROM public.phone_number), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.state', 'id'),
    COALESCE((SELECT MAX(id) FROM public.state), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.contact_outcome', 'id'),
    COALESCE((SELECT MAX(id) FROM public.contact_outcome), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.comment', 'id'),
    COALESCE((SELECT MAX(id) FROM public.comment), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.closing_cause', 'id'),
    COALESCE((SELECT MAX(id) FROM public.closing_cause), 0) + 1,
    false
);

SELECT setval(
    pg_get_serial_sequence('public.address', 'id'),
    COALESCE((SELECT MAX(id) FROM public.address), 0) + 1,
    false
);